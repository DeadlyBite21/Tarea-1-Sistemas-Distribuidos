version: "3.8"
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:7.4.0
    hostname: kafka
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "9997:9997"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:29092,PLAINTEXT_HOST://0.0.0.0:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_JMX_PORT: 9997
      KAFKA_JMX_OPTS: -Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false -Dcom.sun.management.jmxremote.local.only=false -Dcom.sun.management.jmxremote.rmi.port=9997

  init-topics:
    image: confluentinc/cp-kafka:7.4.0
    depends_on:
      - kafka
    command: |
      bash -c "
        echo 'Esperando a que Kafka esté disponible...'
        while ! kafka-topics --bootstrap-server kafka:29092 --list; do
          sleep 1
        done
        echo 'Kafka está disponible. Creando topics...'
        kafka-topics --create --topic questions.requests --bootstrap-server kafka:29092 --partitions 1 --replication-factor 1 --if-not-exists
        kafka-topics --create --topic questions.llm --bootstrap-server kafka:29092 --partitions 1 --replication-factor 1 --if-not-exists
        kafka-topics --create --topic questions.answers --bootstrap-server kafka:29092 --partitions 1 --replication-factor 1 --if-not-exists
        kafka-topics --create --topic storage.persist --bootstrap-server kafka:29092 --partitions 1 --replication-factor 1 --if-not-exists
        echo 'Topics creados exitosamente'
      "

  generator:
    build: ./generator
    ports:
      - "8000:8000"
    depends_on:
      - kafka
      - init-topics

  cache:
    build: ./cache
    ports:
      - "8001:8001"
    depends_on:
      - kafka
      - init-topics

  ollama:
    image: ollama/ollama:latest
    ports:
      - "11434:11434"
    environment:
      - OLLAMA_MODELS=/root/.ollama/models
    volumes:
      - ollama_data:/root/.ollama
    restart: unless-stopped

  llm:
    build: ./llm
    ports:
      - "8003:8003"
    environment:
      - GOOGLE_API_KEY=AIzaSyD65cHkQImieONNdB2BTs1psCSIHsVnudI

    depends_on:
      - kafka
      - init-topics

  score:
    build: ./score
    ports:
      - "8002:8002"
    depends_on:
      - kafka
      - init-topics

  storage:
    build: ./storage
    ports:
      - "8004:8004"
    depends_on:
      - kafka
      - init-topics

  kafdrop:
    image: obsidiandynamics/kafdrop:latest
    restart: "no"
    ports:
      - "9000:9000"
    environment:
      KAFKA_BROKERCONNECT: "kafka:29092"
      JVM_OPTS: "-Xms16M -Xmx48M -Xss180K -XX:-TieredCompilation -XX:+UseStringDeduplication -noverify"
    depends_on:
      - kafka

volumes:
  ollama_data:
